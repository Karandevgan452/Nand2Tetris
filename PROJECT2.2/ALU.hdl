// File name: Nand2Tetris/Project2.2/ALU.hdl
// ALU.hdL
CHIP ALU {
    IN a[16], b[16], zx, nx, zy, ny, f, no; // Control bits
    OUT out[16], zr, ng; // Output and status flags

    PARTS:
    // Compute A
    Mux(a, 0, zx, aM); // Zero a if zx is 1
    Not(aM, aN);       // Invert aM if nx is 1
    Mux(aN, aM, nx, aF);

    // Compute B
    Mux(b, 0, zy, bM); // Zero b if zy is 1
    Not(bM, bN);       // Invert bM if ny is 1
    Mux(bN, bM, ny, bF);

    // ALU operations
    Add(aF, bF, sum, carry); // Compute a + b
    Mux(sum, aF, f, out);    // Select between sum and aF based on f

    // Set zr and ng flags
    Or(out, out, outR);       // Check if out is 0 for zr
    Not(outR, zr);            // If out is 0, zr is 0
    And(out[15], out[15], ng); // Set ng if MSB is 1

    


}
